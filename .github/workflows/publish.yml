name: Publish OpenETL utils to PyPI

on:
  push:
    branches:
      - 'release/openetl-utils*'
    tags:
      - 'v*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      # 1. CHECKOUT AND SETUP ----------------------------------------
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # 2. NUCLEAR-PROOF POETRY INSTALL -----------------------------
      - name: Install Poetry (official method)
        run: |
          # Install using the official installer
          curl -sSL https://install.python-poetry.org | python3 -
          # Force PATH updates
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          echo "export PATH=$HOME/.local/bin:$PATH" >> $HOME/.bashrc
          source $HOME/.bashrc
          # Verify installation
          poetry --version || { echo "Poetry installation failed!"; exit 1; }

      # 3. AUTHENTICATION FIXES (INCLUDES USERNAME) -----------------
      - name: Configure Poetry auth
        run: |
          # Set both token and http-basic auth
          poetry config pypi-token.pypi "$PYPI_TOKEN"
          poetry config http-basic.pypi __token__ "$PYPI_TOKEN"
          poetry config virtualenvs.create false
          # Verify config
          poetry config --list
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}

      # 4. LINE COMMENTING ------------------------------------------
      - name: Comment line 9 in __init__.py
        run: |
          if [ -f "openetl_utils/__init__.py" ]; then
            sed -i.bak '9s/^/# /' openetl_utils/__init__.py
            echo "✅ Successfully commented line 9"
            # Show diff for verification
            diff -u openetl_utils/__init__.py.bak openetl_utils/__init__.py || true
          else
            echo "❌ Critical: __init__.py not found!"
            exit 1
          fi

      # 5. BUILD AND PUBLISH ----------------------------------------
      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Build package
        run: |
          poetry build --no-interaction
          ls -la dist/
          twine check dist/*

      - name: Publish to PyPI (with explicit auth)
        run: |
          echo "Publishing with token: ${PYPI_TOKEN:0:4}...${PYPI_TOKEN: -4}"
          poetry publish \
            --no-interaction \
            --username=__token__ \
            --password="$PYPI_TOKEN"
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}

      # 6. VERIFICATION ---------------------------------------------
      - name: Verify published package
        if: always()
        run: |
          sleep 10  # Wait for PyPI propagation
          pip install --no-cache-dir --upgrade openetl-utils==$(poetry version -s)
          python -c "import openetl_utils; print(f'Imported version {openetl_utils.__version__}')"